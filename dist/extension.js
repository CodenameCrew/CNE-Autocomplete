"use strict";var C=Object.create;var l=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,$=Object.prototype.hasOwnProperty;var I=(t,i)=>{for(var o in i)l(t,o,{get:i[o],enumerable:!0})},S=(t,i,o,p)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of w(i))!$.call(t,s)&&s!==o&&l(t,s,{get:()=>i[s],enumerable:!(p=v(i,s))||p.enumerable});return t};var b=(t,i,o)=>(o=t!=null?C(x(t)):{},S(i||!t||!t.__esModule?l(o,"default",{value:t,enumerable:!0}):o,t)),A=t=>S(l({},"__esModule",{value:!0}),t);var k={};I(k,{activate:()=>F,deactivate:()=>P});module.exports=A(k);var e=b(require("vscode"));function F(t){e.window.showInformationMessage("Codename Autocomplete is Running! | VSCode Version: "+e.version),t.subscriptions.push(e.languages.registerCompletionItemProvider("xml",{provideCompletionItems(o,p,s,M){let m=[],a=function(n,h,y,f){let r=new e.CompletionItem(`[Codename ${n}] ${h}`);r.documentation=new e.MarkdownString(y),r.detail="Codename Engine "+n+" XML Snippet",r.kind=e.CompletionItemKind.Snippet,r.insertText=new e.SnippetString(f),m.push(r)};a("Stage","Create Stage","This creates an empty stage for Codename Engine",`<!DOCTYPE codename-engine-stage>
<stage zoom="1" startCamPosX="0" startCamPosY="0" folder="stages/(your stage folder name in images/stage/)/">
	$0
</stage>`),a("Stage","High Memory Block","Creates a element that doesn't show on low memory mode",`<high-memory>
	<!-- your sprites elements here -->
	$0
</high-memory>`),a("Stage","Static Sprite","Creates a sprite element",'<sprite x="0" y="0" alpha="1" scroll="1" antialiasing="true" scale="1" flipX="false" flipY="false" updateHitbox="true" zoomfactor="1" sprite="mySillyImage" name="sillySprite"/>$0'),a("Stage","Static Sprite (Compact)","Creates a sprite element but removes the usually unused properties",'<sprite x="0" y="0" alpha="1" scale="1" sprite="mySillyImage" name="sillySprite"/>$0'),a("Stage","Animated Sprite","Creates a animated sprite element that uses sparrow",`<sprite x="0" y="0" alpha="1" scroll="1" antialiasing="true" scale="1" flipX="false" flipY="false" updateHitbox="true" zoomfactor="1" type="(either none, beat or loop)" sprite="mySillyImage" name="sillySprite">
	<!-- your sprites anims here (use the "Sprite Animation" Snippet) -->
	$0
</sprite>`),a("Stage","Animated Sprite (Compact)","Creates a animated sprite element but removes the usually unused properties",`<sprite x="0" y="0" alpha="1" scale="1" type="loop" sprite="mySillyImage" name="sillySprite">
	<!-- your sprites anims here (use the "Sprite Animation" Snippet) -->
	$0
</sprite>`),a("Stage","Sprite Animation","Creates a sprite animation element",`<anim name="idle" anim="mysprite idle0000" loop="false"/>
	$0`),a("Stage","Sprite Animation With Indices","Creates a sprite animation element",`<anim name="idle" anim="mysprite idle0000" loop="false" indices="0..14"/>
$0`),a("Stage","Solid Sprite","Creates a solid sprite element",'<solid x="0" y="0" width="50" height="50" color="#FFFFFF"/>$0');var d=[["bf","Player"],["gf","Spectator"],["dad","Opponent"]];for(let n=0;n<d.length;n++){var c=d[n],u=c[0],g=c[1];a("Stage",`${g} Character Position`,`Sets the position for the ${g.toLowerCase()} in the stage`,`<${u} x="0" y="0" alpha="1" scale="1" camxoffset="0" camyoffset="0" flipX="false" scroll="1"/>$0`)}return new e.CompletionList(m,!1)}}));let i=e.commands.registerCommand("codename-autocomplete.helloWorld",()=>{e.window.showInformationMessage("Hello World from codename-autocomplete!")});t.subscriptions.push(i)}function P(){}0&&(module.exports={activate,deactivate});
